spring:
  redis:
    host: 127.0.0.1
    port: 6379
    database: 13
    timeout: 10s
    lettuce:
      pool:
        min-idle: 0
        max-idle: 8
        max-active: 8
        max-wait: -1ms
  devtools:
    restart:
      enabled: true   # 热部署是否启动
      additional-paths: src/main/java   # 监听哪一部分的目录
      exclude: static/**,public/**,WEB-INF/**  # 排除指定的目录文件 不需要restart
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/activiti5?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
    # Druid StatViewServlet配置
    druid:
      stat-view-servlet:
        # 默认true 内置监控页面首页/druid/index.html
        enabled: true
        url-pattern: /druid/*
        # 允许清空统计数据
        reset-enable: true
        login-username: zhfw
        login-password: zhfw
        # IP白名单 多个逗号分隔
        allow:
        # IP黑名单
        deny:
      filter:
        stat:
          # 显示慢sql 默认当超过3秒显示
          log-slow-sql: true
          slow-sql-millis: 100
      max-active: 200
      initial-size: 20
      min-idle: 20
      max-wait: 6000
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-test-query: SELECT 1
  # 工作流
  activiti:
    check-process-definitions: false
    db-identity-used: false
    # 自动生成Activiti相关表 第一次生成后建议关闭提高运行速度
    database-schema-update: true
    history-level: full
  rabbitmq:
    host: 192.168.4.25
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    listener:
      simple:
        acknowledge-mode: manual #设置确认方式
        prefetch: 1 #每次处理1条消息
  mvc:
    servlet:
      load-on-startup: 1
  zipkin:
    base-url: http://127.0.0.1:4090
    enabled: true
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1.0
  servlet:
    multipart:
      max-file-size: 10MB # 单个文件大小
      max-request-size: 30MB # 请求总上传的数据大小
      enabled: true
auth:
  store-jwt: false
  jwt-signing-key: incloud=$==+_+%0%:)(:)
  add-userinfo: false
  token:
    # 默认JWT 启用Redis后设置为true后，token将存入redis，并具有单点登录功能
    redis: true
  # token过期时间（分钟）
  tokenExpireTime: 60
  # 用户选择保存登录状态对应token过期时间（天）
  saveLoginTime: 7
  # 限制用户登陆错误次数（次）
  loginTimeLimit: 10
  # 错误超过次数后多少分钟后才能继续登录（分钟）
  loginAfterTime: 10

security:
  oauth2:
    resource:
      user-info-uri: http://127.0.0.1:4062/zhfw/oauth/user-me
      prefer-token-info: false
eureka:
  client:
    healthcheck:
      enabled: true
# Mybatis-plus
mybatis-plus:
  # 放在resource目录 classpath:/mapper/*.xml
  mapper-locations: classpath:/mapper/*.xml
  # 实体扫描，多个package用逗号或者分号分隔
  #typeAliasesPackage: com.bdyh.common.activiti.entity.**
  #typeEnumsPackage: com.bdyh.common.activiti.entity.**
  global-config:
    # 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    # 字段策略 0:"忽略判断",1:"非 NULL 判断",2:"非空判断"
    field-strategy: 2
    # 驼峰下划线转换
    db-column-underline: true
    # 刷新mapper 调试神器
    refresh-mapper: true
    # 数据库大写下划线转换
    #capital-mode: true
    # 逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
#hystrix的超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 90000
#ribbon的超时时间
ribbon:
  ReadTimeout: 20000
  ConnectTimeout: 20000
  hystrix:
    enabled: true
# Swagger界面内容配置
swagger:
  title: 智慧法务 工作流服务模块（active）API接口文档
  description: 智慧法务 Api Documentation
  version: 1.0.0
  termsOfServiceUrl: http://www.pkulaw.cn
  contact:
    name: zhfw
    url: http://www.pkulaw.cn
    email: tech@pkulaw.cn

test: application